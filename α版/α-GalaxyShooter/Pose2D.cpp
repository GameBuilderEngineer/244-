//=============================================================================
// Poseの描画処理 [Pose.cpp]
////=============================================================================
#include "Pose2D.h"

//*****************************************************************************
// 定数・マクロ
//*****************************************************************************
//マクロ定義
const static int		WIDTH = WINDOW_WIDTH;						// ポーズ2D横サイズ
const static int		HEIGHT = WINDOW_HEIGHT;						// ポーズ2D縦サイズ

const static float		POSITION_X = 0.0f;							// ポーズ2DX座標
const static float		POSITION_Y = 0.0f;							// ポーズ2DY座標
//*****************************************************************************
// グローバル変数
//*****************************************************************************
int Pose2D::cntUI = -1;
LPDIRECT3DTEXTURE9 Pose2D::texturePose2D = NULL;				// ポーズ2Dテクスチャ

//=============================================================================
// コンストラクタ
//=============================================================================
Pose2D::Pose2D()
{
	cntUI++;
}

//=============================================================================
// デストラクタ
//=============================================================================
Pose2D::~Pose2D()
{
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT Pose2D::initialize(LPDIRECT3DDEVICE9 device, int _playerNumber, TextureLoader*textureLoader)
{
	playerNumber = _playerNumber;

	texturePose2D = *textureLoader->getTexture(textureLoaderNS::POSE);

	Sprite::initialize(device,
		texturePose2D,							// テクスチャ
		spriteNS::TOP_LEFT,							// 原点
		WIDTH,										// 横幅
		HEIGHT,										// 高さ
		D3DXVECTOR3(POSITION_X, POSITION_Y, 0.0f),	// 座標
		D3DXVECTOR3(0.0f, 0.0f, 0.0f),				// 回転
		POSE2D_COLOR
	);

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void Pose2D::uninitialize(void)
{
	setTexture(NULL);

	// インスタンスが存在しなければテクスチャ解放
	cntUI--;
	if (cntUI < 0)
	{
		SAFE_RELEASE(texturePose2D)
	}
}

//=============================================================================
// 更新処理
//=============================================================================
void Pose2D::update(void)
{
}


//=============================================================================
// 描画処理
//=============================================================================
void Pose2D::render(LPDIRECT3DDEVICE9 device)
{
	Sprite::render(device);
}
