//=============================================================================
// タイトルの描画処理 [Title2D.cpp]
// 制作者 飯塚春輝
////=============================================================================
#include "Title2D.h"
//*****************************************************************************
// 定数
//*****************************************************************************
const static int		WIDTH = WINDOW_WIDTH;						// タイトル2D横サイズ
const static int		HEIGHT = WINDOW_HEIGHT;						// タイトル2D縦サイズ
const static float		POSITION_X = 0.0f;							// タイトル2DX座標
const static float		POSITION_Y = 0.0f;							// タイトル2DY座標
//*****************************************************************************
// グローバル変数
//*****************************************************************************
int Title2D::cntUI = -1;
LPDIRECT3DTEXTURE9 Title2D::textureTitle2D = NULL;				// タイトル2Dテクスチャ
//=============================================================================
// コンストラクタ
//=============================================================================
Title2D::Title2D()
{
	cntUI++;
}
//=============================================================================
// デストラクタ
//=============================================================================
Title2D::~Title2D()
{
}
//=============================================================================
// 初期化処理
//=============================================================================
HRESULT Title2D::initialize(LPDIRECT3DDEVICE9 device, int _playerNumber, TextureLoader*textureLoader)
{
	// プレイヤーナンバー
	playerNumber = _playerNumber;

	// テクスチャを読み込む
	setVisualDirectory();

	textureTitle2D = *textureLoader->getTexture(textureLoaderNS::TITLE2D);

	// タイトル2D初期化
	Sprite::initialize(device,
		textureTitle2D,							// テクスチャ
		spriteNS::TOP_LEFT,							// 原点
		WIDTH,										// 横幅
		HEIGHT,										// 高さ
		D3DXVECTOR3(POSITION_X, POSITION_Y, 0.0f),	// 座標
		D3DXVECTOR3(0.0f, 0.0f, 0.0f),				// 回転
		TITLE2D_COLOR
	);

	return S_OK;
}
//=============================================================================
// 終了処理
//=============================================================================
void Title2D::uninitialize(void)
{
}
//=============================================================================
// 更新処理
//=============================================================================
void Title2D::update(void)
{
}
//=============================================================================
// 描画処理
//=============================================================================
void Title2D::render(LPDIRECT3DDEVICE9 device)
{
	// タイトル2D描画
	Sprite::render(device);
}
