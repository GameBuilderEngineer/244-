//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//グローバル
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
float4x4 matrixProjection;
float4x4 matrixView;
texture planeTexture;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//定義
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
sampler textureSampler = sampler_state
{
	texture = <planeTexture>;
	MipFilter = LINEAR;
	MinFilter = POINT;
	MagFilter = POINT;
};

struct VS_OUT
{
	float4 position : POSITION;
	float2 uv : TEXCOORD0;
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//バーテックス・シェーダー
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
VS_OUT vsMain(
	float2 position : POSITION, 
	float2 localUV : TEXCOORD0,
	float3 worldPosition : TEXCOORD1)
{
	VS_OUT Out;

	Out.position = float4(
		position.x + worldPosition.x,
		position.y + worldPosition.y,
		worldPosition.z,
		1.0f);
	Out.position = mul(Out.position, mul(matrixView, matrixProjection));

	Out.uv = localUV;

	return Out;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//ピクセル・シェーダー
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
float4 psMain(VS_OUT In) : COLOR0
{
	return tex2D(textureSampler, In.uv);
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// テクニック
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
technique mainTechnique {
	pass p0 {
		VertexShader = compile vs_2_0 vsMain();
		PixelShader = compile ps_2_0 psMain();
	}
}
