//=============================================================================
// コロニーHP処理 [ColonyHp.cpp]
//
// Author : HAL東京昼間部 2年制ゲーム学科 GP12A332 32 中込和輝
// 作成日 : 2019/6/1
//=============================================================================
//*****************************************************************************
// インクルード
//*****************************************************************************
#include "Main.h"
#include "ColonyHp.h"


//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define TEXTURE_COLONY_HP		_T("data/TEXTURE/attack.png")	// テクスチャ場所
#define INITIAL_POS				(D3DXVECTOR3(150.0f, 400.0f, 0.0f))// 初期位置


//*****************************************************************************
// グローバル変数
//*****************************************************************************
// コロニーHPオブジェクト
ColonyHp colonyHp(COLONY_HP_SIZE_X, COLONY_HP_SIZE_Y, D3DXVECTOR3(100.0f, 100.0f, 0.0f),
	D3DXVECTOR3(0.0f, 0.0f, 0.0f), D3DCOLOR_RGBA(255, 255, 255, 255));


//=============================================================================
// 初期化処理
//=============================================================================
HRESULT ColonyHp::init(int type)
{
	LPDIRECT3DDEVICE9 pDevice = GetDevice();	// デバイス取得
	
	//if (type == FIRSTINIT)
	//{
	//	// テクスチャの読み込み
	//	D3DXCreateTextureFromFile(pDevice,
	//		TEXTURE_COLONY_HP,
	//		ColonyHp.getAdrTexture());
	//}

	// 位置初期化
	position = INITIAL_POS;
	setVertex();

	return S_OK;
}


//=============================================================================
// 終了処理
//=============================================================================
void ColonyHp::uninit(void)
{
	release();		// テクスチャ解放
}


//=============================================================================
// 更新処理
//=============================================================================
void ColonyHp::update(void)
{
}


//=============================================================================
// 描画処理
//=============================================================================
void ColonyHp::draw(void)
{
	LPDIRECT3DDEVICE9 pDevice = GetDevice();

	// 頂点フォーマットの設定
	pDevice->SetFVF(FVF_VERTEX_2D);

	// テクスチャの設定
	pDevice->SetTexture(0, pTexture);

	// ポリゴンの描画
	pDevice->DrawPrimitiveUP(D3DPT_TRIANGLESTRIP, NUM_POLYGON, vertexWk, sizeof(VERTEX_2D));
}


//=============================================================================
// テクスチャ解放
//=============================================================================
void ColonyHp::release(void)
{
	SAFE_RELEASE(pTexture)
}


//=============================================================================
// コンストラクタ
//=============================================================================
ColonyHp::ColonyHp(void)
{
}

ColonyHp::ColonyHp(int sizeX, int sizeY, D3DXVECTOR3 pos, D3DXVECTOR3 rot, D3DCOLOR color) :Quad(sizeX, sizeY, pos, rot, color)
{
}


//=============================================================================
// デストラクタ
//=============================================================================
ColonyHp::~ColonyHp(void)
{
}


ColonyHp* getColonyHp(void)
{
	return &colonyHp;
}



